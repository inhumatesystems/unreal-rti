// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RuntimeState.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_RuntimeState_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_RuntimeState_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_RuntimeState_2eproto INHUMATE_RTI_PROTOS_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct INHUMATE_RTI_PROTOS_EXPORT TableStruct_RuntimeState_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern INHUMATE_RTI_PROTOS_EXPORT const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_RuntimeState_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace inhumate {
namespace rti {
namespace proto {

enum RuntimeState : int {
  UNKNOWN = 0,
  LAUNCHING = 5,
  LAUNCHED = 6,
  INITIAL = 10,
  LOADING = 11,
  READY = 12,
  RUNNING = 20,
  PLAYBACK = 21,
  PAUSED = 30,
  PLAYBACK_PAUSED = 31,
  END = 34,
  PLAYBACK_END = 35,
  STOPPING = 40,
  STOPPED = 41,
  PLAYBACK_STOPPED = 42,
  SHUTTING_DOWN = 50,
  SHUT_DOWN = 51,
  RuntimeState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  RuntimeState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
INHUMATE_RTI_PROTOS_EXPORT bool RuntimeState_IsValid(int value);
constexpr RuntimeState RuntimeState_MIN = UNKNOWN;
constexpr RuntimeState RuntimeState_MAX = SHUT_DOWN;
constexpr int RuntimeState_ARRAYSIZE = RuntimeState_MAX + 1;

INHUMATE_RTI_PROTOS_EXPORT const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RuntimeState_descriptor();
template<typename T>
inline const std::string& RuntimeState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RuntimeState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RuntimeState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RuntimeState_descriptor(), enum_t_value);
}
inline bool RuntimeState_Parse(
    const std::string& name, RuntimeState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RuntimeState>(
    RuntimeState_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace rti
}  // namespace inhumate

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::inhumate::rti::proto::RuntimeState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::inhumate::rti::proto::RuntimeState>() {
  return ::inhumate::rti::proto::RuntimeState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_RuntimeState_2eproto
